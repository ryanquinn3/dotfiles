#! /bin/zsh
set -e

DIR=$(cd `dirname $0` && pwd)

function configure_screenshot_storage(){
	# Setup the screenshots directory and have the OS store all screenshots there
	[ ! -d ~/screenshots ] && mkdir ~/screenshots
	defaults write com.apple.screencapture location ~/screenshots
	defaults write com.apple.screencapture "show-thumbnail" -bool "false" 
	killall SystemUIServer
}

function configure_dock_settings(){
	defaults write com.apple.dock "autohide" -bool "true"
	defaults write com.apple.dock "orientation" -string "left"
	defaults write com.apple.dock expose-group-apps -bool true
	killall Dock
}

function configure_finder() {
	defaults write com.apple.finder "ShowPathbar" -bool "true" && killall Finder
}

function setup_tmux() {
	mkdir -p ~/.tmux/plugins
	clone_tmux_plugin_manager
}

function clone_tmux_plugin_manager(){
	git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
}

function load_nvm(){
	export NVM_DIR="/usr/local/share/nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
### Oh My Zsh

function setup_oh_my_zsh_plugins() {
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
	git clone --depth 1 https://github.com/unixorn/fzf-zsh-plugin.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-zsh-plugin
	git clone https://github.com/Aloxaf/fzf-tab ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/fzf-tab
	git clone https://github.com/junegunn/fzf-git.sh.git ~/fzf-git.sh
	git clone https://github.com/chrisands/zsh-yarn-completions ~/.oh-my-zsh/custom/plugins/zsh-yarn-completions
}

function setup_oh_my_zsh() {
	if [ -d ~/.oh-my-zsh ]; then
			echo "Oh my zsh is already installed"
	else
		sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
	fi
	mkdir -p ~/.zsh/completions
	setup_oh_my_zsh_plugins
}

function install_homebrew_for_linux(){
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	sudo apt-get install build-essential
	(cd $DIR && ./bin/install-apps.sh)
}

### end Oh My Zsh

### apt packages
function install_apt_packages() {
	sudo apt-get update
}

### end apt packages

if [ -n "$(which nvm)" ]; then
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
fi

setup_tmux
load_nvm


if [[ $OSTYPE == 'darwin'* ]]; then
	stow -t "$HOME" aerospace
  echo -ne "Updating MacOS UI config...\033[0K\r"
  configure_screenshot_storage
  configure_dock_settings
  configure_finder
  echo -e "Updating MacOS UI config... Done"
fi

if [[ $OSTYPE == 'linux-gnu'* ]]; then
	echo -ne "Installing homebrew...\033[0K\r"
	install_homebrew_for_linux
	echo -ne "Installing apt packages...\033[0K\r"
	install_apt_packages
	echo -e "Installing apt packages... Done"
	mkdir -p ~/.fzf/shell
	ln -s  /usr/share/doc/fzf/examples/key-bindings.zsh ~/.fzf/shell/key-bindings.zsh
fi

echo "Symlinking dotfiles..."
./stow.sh


# make sure default shell is set to zsh
sudo chsh -s /usr/bin/zsh $USERNAME

echo "Installing node..."
nvm install 22.14.0
nvm alias default 22.14.0


echo "Configuring shell..."
source ~/.zshrc
echo "Done."

